{"version":3,"sources":["components/Container/Container.module.scss","components/Section/Section.jsx","components/Container/Container.jsx","components/ContactForm/ContactForm.jsx","components/ContactsList/ContactList.jsx","components/Filter/Filter.jsx","App.jsx","index.js","components/ContactForm/ContactForm.module.scss"],"names":["module","exports","Section","title","children","className","Container","styles","ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onFormSubmit","reset","Form","onSubmit","this","label","type","input","pattern","required","onChange","Component","useStyles","createUseStyles","contactItem","marginBottom","deleteBtn","marginLeft","ContactList","contacts","onDeleteContact","map","id","onClick","Filter","onFilterChange","App","filter","data","find","alert","uuidv4","prevState","getVisibleContacts","normalizedFilter","toLowerCase","includes","contact","parsedContacts","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9dec877e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__11SY1\"};","const Section = ({ title, children }) => (\n  <section className=\"Section\">\n    <h2 className=\"title\">{title}</h2>\n    {children}\n  </section>\n);\n\nexport default Section;\n","import styles from './Container.module.scss';\nconst Container = ({ children }) => (\n  <div className={styles.Container}>{children}</div>\n);\nexport default Container;\n","import { Component } from 'react';\nimport styles from './ContactForm.module.scss';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onFormSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <form className={styles.Form} onSubmit={this.handleSubmit}>\n        <label>\n          {' '}\n          <span className={styles.label}>Name</span>\n          <input\n            type=\"text\"\n            className={styles.input}\n            name=\"name\"\n            value={this.state.name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={this.handleChange}\n          />\n        </label>\n        <label>\n          {' '}\n          <span className={styles.label}>Number</span>\n          <input\n            type=\"tel\"\n            className={styles.input}\n            name=\"number\"\n            value={this.state.number}\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n            required\n            onChange={this.handleChange}\n          />\n        </label>\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  contactItem: {\n    marginBottom: 15,\n  },\n  deleteBtn: {\n    marginLeft: 25,\n  },\n});\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  const { contactItem, deleteBtn } = useStyles();\n  return (\n    <ul>\n      {contacts.map(({ name, number, id }) => (\n        <li key={id} className={contactItem}>\n          <span>\n            {name}: {number}\n          </span>\n          <button\n            type=\"button\"\n            className={deleteBtn}\n            onClick={() => onDeleteContact(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\nexport default ContactList;\n","const Filter = ({ value, onFilterChange }) => {\n  return (\n    <div className=\"filter-wrapper\">\n      <h3>Find contacts by name:</h3>\n      <input type=\"text\" value={value} onChange={onFilterChange} />\n    </div>\n  );\n};\n\nexport default Filter;\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport Section from './components/Section';\nimport Container from './components/Container';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactsList';\nimport Filter from './components/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    ],\n    filter: '',\n  };\n\n  onFormSubmit = data => {\n    const isDuplicateNumber = this.state.contacts.find(\n      ({ number }) => number === data.number,\n    );\n    if (isDuplicateNumber) {\n      alert('This number is already in contacts.');\n      return;\n    }\n    data.id = uuidv4();\n    this.setState(prevState => ({\n      contacts: [data, ...prevState.contacts],\n    }));\n  };\n\n  onFilterChange = e => {\n    this.setState({\n      filter: e.currentTarget.value,\n    });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  onDeleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  componentDidMount() {\n    const parsedContacts = JSON.parse(localStorage.getItem('contacts'));\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <div className=\"App\">\n        <h1>Phonebook</h1>\n        <Container>\n          <Section title=\"Add contact:\">\n            <ContactForm onFormSubmit={this.onFormSubmit} />\n          </Section>\n        </Container>\n        <Container>\n          <Section>\n            <Filter value={filter} onFilterChange={this.onFilterChange} />\n          </Section>\n        </Container>\n        <Container>\n          <Section title=\"Contacts\">\n            <ContactList\n              contacts={visibleContacts}\n              onDeleteContact={this.onDeleteContact}\n            />\n          </Section>\n        </Container>\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  filter: PropTypes.string,\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"ContactForm_Form__pmdyI\",\"input\":\"ContactForm_input__3emgF\",\"label\":\"ContactForm_label__3KgVy\"};"],"sourceRoot":""}